//===----------------------------------------------------------------------===//
//
// Port from the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
import { findFirstOf } from '../../src';
describe('findFirstOf', () => {
  describe('libcxx test', () => {
    it('pointerSizeSize.pass', () => {
      expect(findFirstOf('', '', 0, 0)).toEqual(-1);
      expect(findFirstOf('', 'irkhs', 0, 0)).toEqual(-1);
      expect(findFirstOf('', 'kante', 0, 1)).toEqual(-1);
      expect(findFirstOf('', 'oknlr', 0, 2)).toEqual(-1);
      expect(findFirstOf('', 'pcdro', 0, 4)).toEqual(-1);
      expect(findFirstOf('', 'bnrpe', 0, 5)).toEqual(-1);
      expect(findFirstOf('', 'jtdaefblso', 0, 0)).toEqual(-1);
      expect(findFirstOf('', 'oselktgbca', 0, 1)).toEqual(-1);
      expect(findFirstOf('', 'eqgaplhckj', 0, 5)).toEqual(-1);
      expect(findFirstOf('', 'bjahtcmnlp', 0, 9)).toEqual(-1);
      expect(findFirstOf('', 'hjlcmgpket', 0, 10)).toEqual(-1);
      expect(findFirstOf('', 'htaobedqikfplcgjsmrn', 0, 0)).toEqual(-1);
      expect(findFirstOf('', 'hpqiarojkcdlsgnmfetb', 0, 1)).toEqual(-1);
      expect(findFirstOf('', 'dfkaprhjloqetcsimnbg', 0, 10)).toEqual(-1);
      expect(findFirstOf('', 'ihqrfebgadntlpmjksoc', 0, 19)).toEqual(-1);
      expect(findFirstOf('', 'ngtjfcalbseiqrphmkdo', 0, 20)).toEqual(-1);
      expect(findFirstOf('', '', 1, 0)).toEqual(-1);
      expect(findFirstOf('', 'lbtqd', 1, 0)).toEqual(-1);
      expect(findFirstOf('', 'tboim', 1, 1)).toEqual(-1);
      expect(findFirstOf('', 'slcer', 1, 2)).toEqual(-1);
      expect(findFirstOf('', 'cbjfs', 1, 4)).toEqual(-1);
      expect(findFirstOf('', 'aqibs', 1, 5)).toEqual(-1);
      expect(findFirstOf('', 'gtfblmqinc', 1, 0)).toEqual(-1);
      expect(findFirstOf('', 'mkqpbtdalg', 1, 1)).toEqual(-1);
      expect(findFirstOf('', 'kphatlimcd', 1, 5)).toEqual(-1);
      expect(findFirstOf('', 'pblasqogic', 1, 9)).toEqual(-1);
      expect(findFirstOf('', 'arosdhcfme', 1, 10)).toEqual(-1);
      expect(findFirstOf('', 'blkhjeogicatqfnpdmsr', 1, 0)).toEqual(-1);
      expect(findFirstOf('', 'bmhineprjcoadgstflqk', 1, 1)).toEqual(-1);
      expect(findFirstOf('', 'djkqcmetslnghpbarfoi', 1, 10)).toEqual(-1);
      expect(findFirstOf('', 'lgokshjtpbemarcdqnfi', 1, 19)).toEqual(-1);
      expect(findFirstOf('', 'bqjhtkfepimcnsgrlado', 1, 20)).toEqual(-1);
      expect(findFirstOf('eaint', '', 0, 0)).toEqual(-1);
      expect(findFirstOf('binja', 'gfsrt', 0, 0)).toEqual(-1);
      expect(findFirstOf('latkm', 'pfsoc', 0, 1)).toEqual(-1);
      expect(findFirstOf('lecfr', 'tpflm', 0, 2)).toEqual(-1);
      expect(findFirstOf('eqkst', 'sgkec', 0, 4)).toEqual(0);
      expect(findFirstOf('cdafr', 'romds', 0, 5)).toEqual(1);
      expect(findFirstOf('prbhe', 'qhjistlgmr', 0, 0)).toEqual(-1);
      expect(findFirstOf('lbisk', 'pedfirsglo', 0, 1)).toEqual(-1);
      expect(findFirstOf('hrlpd', 'aqcoslgrmk', 0, 5)).toEqual(-1);
      expect(findFirstOf('ehmja', 'dabckmepqj', 0, 9)).toEqual(0);
      expect(findFirstOf('mhqgd', 'pqscrjthli', 0, 10)).toEqual(1);
      expect(findFirstOf('tgklq', 'kfphdcsjqmobliagtren', 0, 0)).toEqual(-1);
      expect(findFirstOf('bocjs', 'rokpefncljibsdhqtagm', 0, 1)).toEqual(-1);
      expect(findFirstOf('grbsd', 'afionmkphlebtcjqsgrd', 0, 10)).toEqual(-1);
      expect(findFirstOf('ofjqr', 'aenmqplidhkofrjbctsg', 0, 19)).toEqual(0);
      expect(findFirstOf('btlfi', 'osjmbtcadhiklegrpqnf', 0, 20)).toEqual(0);
      expect(findFirstOf('clrgb', '', 1, 0)).toEqual(-1);
      expect(findFirstOf('tjmek', 'osmia', 1, 0)).toEqual(-1);
      expect(findFirstOf('bgstp', 'ckonl', 1, 1)).toEqual(-1);
      expect(findFirstOf('hstrk', 'ilcaj', 1, 2)).toEqual(-1);
      expect(findFirstOf('kmspj', 'lasiq', 1, 4)).toEqual(2);
      expect(findFirstOf('tjboh', 'kfqmr', 1, 5)).toEqual(-1);
      expect(findFirstOf('ilbcj', 'klnitfaobg', 1, 0)).toEqual(-1);
      expect(findFirstOf('jkngf', 'gjhmdlqikp', 1, 1)).toEqual(3);
      expect(findFirstOf('gfcql', 'skbgtahqej', 1, 5)).toEqual(-1);
      expect(findFirstOf('dqtlg', 'bjsdgtlpkf', 1, 9)).toEqual(2);
      expect(findFirstOf('bthpg', 'bjgfmnlkio', 1, 10)).toEqual(4);
      expect(findFirstOf('dgsnq', 'lbhepotfsjdqigcnamkr', 1, 0)).toEqual(-1);
      expect(findFirstOf('rmfhp', 'tebangckmpsrqdlfojhi', 1, 1)).toEqual(-1);
      expect(findFirstOf('jfdam', 'joflqbdkhtegimscpanr', 1, 10)).toEqual(1);
      expect(findFirstOf('edapb', 'adpmcohetfbsrjinlqkg', 1, 19)).toEqual(1);
      expect(findFirstOf('brfsm', 'iacldqjpfnogbsrhmetk', 1, 20)).toEqual(1);
      expect(findFirstOf('ndrhl', '', 2, 0)).toEqual(-1);
      expect(findFirstOf('mrecp', 'otkgb', 2, 0)).toEqual(-1);
      expect(findFirstOf('qlasf', 'cqsjl', 2, 1)).toEqual(-1);
      expect(findFirstOf('smaqd', 'dpifl', 2, 2)).toEqual(4);
      expect(findFirstOf('hjeni', 'oapht', 2, 4)).toEqual(-1);
      expect(findFirstOf('ocmfj', 'cifts', 2, 5)).toEqual(3);
      expect(findFirstOf('hmftq', 'nmsckbgalo', 2, 0)).toEqual(-1);
      expect(findFirstOf('fklad', 'tpksqhamle', 2, 1)).toEqual(-1);
      expect(findFirstOf('dirnm', 'tpdrchmkji', 2, 5)).toEqual(2);
      expect(findFirstOf('hrgdc', 'ijagfkblst', 2, 9)).toEqual(2);
      expect(findFirstOf('ifakg', 'kpocsignjb', 2, 10)).toEqual(3);
      expect(findFirstOf('ebrgd', 'pecqtkjsnbdrialgmohf', 2, 0)).toEqual(-1);
      expect(findFirstOf('rcjml', 'aiortphfcmkjebgsndql', 2, 1)).toEqual(-1);
      expect(findFirstOf('peqmt', 'sdbkeamglhipojqftrcn', 2, 10)).toEqual(3);
      expect(findFirstOf('frehn', 'ljqncehgmfktroapidbs', 2, 19)).toEqual(2);
      expect(findFirstOf('tqolf', 'rtcfodilamkbenjghqps', 2, 20)).toEqual(2);
      expect(findFirstOf('cjgao', '', 4, 0)).toEqual(-1);
      expect(findFirstOf('kjplq', 'mabns', 4, 0)).toEqual(-1);
      expect(findFirstOf('herni', 'bdnrp', 4, 1)).toEqual(-1);
      expect(findFirstOf('tadrb', 'scidp', 4, 2)).toEqual(-1);
      expect(findFirstOf('pkfeo', 'agbjl', 4, 4)).toEqual(-1);
      expect(findFirstOf('hoser', 'jfmpr', 4, 5)).toEqual(4);
      expect(findFirstOf('kgrsp', 'rbpefghsmj', 4, 0)).toEqual(-1);
      expect(findFirstOf('pgejb', 'apsfntdoqc', 4, 1)).toEqual(-1);
      expect(findFirstOf('thlnq', 'ndkjeisgcl', 4, 5)).toEqual(-1);
      expect(findFirstOf('nbmit', 'rnfpqatdeo', 4, 9)).toEqual(4);
      expect(findFirstOf('jgmib', 'bntjlqrfik', 4, 10)).toEqual(4);
      expect(findFirstOf('ncrfj', 'kcrtmpolnaqejghsfdbi', 4, 0)).toEqual(-1);
      expect(findFirstOf('ncsik', 'lobheanpkmqidsrtcfgj', 4, 1)).toEqual(-1);
      expect(findFirstOf('sgbfh', 'athdkljcnreqbgpmisof', 4, 10)).toEqual(4);
      expect(findFirstOf('dktbn', 'qkdmjialrscpbhefgont', 4, 19)).toEqual(4);
      expect(findFirstOf('fthqm', 'dmasojntqleribkgfchp', 4, 20)).toEqual(4);
      expect(findFirstOf('klopi', '', 5, 0)).toEqual(-1);
      expect(findFirstOf('dajhn', 'psthd', 5, 0)).toEqual(-1);
      expect(findFirstOf('jbgno', 'rpmjd', 5, 1)).toEqual(-1);
      expect(findFirstOf('hkjae', 'dfsmk', 5, 2)).toEqual(-1);

      expect(findFirstOf('gbhqo', 'skqne', 5, 4)).toEqual(-1);
      expect(findFirstOf('ktdor', 'kipnf', 5, 5)).toEqual(-1);
      expect(findFirstOf('ldprn', 'hmrnqdgifl', 5, 0)).toEqual(-1);
      expect(findFirstOf('egmjk', 'fsmjcdairn', 5, 1)).toEqual(-1);
      expect(findFirstOf('armql', 'pcdgltbrfj', 5, 5)).toEqual(-1);
      expect(findFirstOf('cdhjo', 'aekfctpirg', 5, 9)).toEqual(-1);
      expect(findFirstOf('jcons', 'ledihrsgpf', 5, 10)).toEqual(-1);
      expect(findFirstOf('cbrkp', 'mqcklahsbtirgopefndj', 5, 0)).toEqual(-1);
      expect(findFirstOf('fhgna', 'kmlthaoqgecrnpdbjfis', 5, 1)).toEqual(-1);
      expect(findFirstOf('ejfcd', 'sfhbamcdptojlkrenqgi', 5, 10)).toEqual(-1);
      expect(findFirstOf('kqjhe', 'pbniofmcedrkhlstgaqj', 5, 19)).toEqual(-1);
      expect(findFirstOf('pbdjl', 'mongjratcskbhqiepfdl', 5, 20)).toEqual(-1);
      expect(findFirstOf('gajqn', '', 6, 0)).toEqual(-1);
      expect(findFirstOf('stedk', 'hrnat', 6, 0)).toEqual(-1);
      expect(findFirstOf('tjkaf', 'gsqdt', 6, 1)).toEqual(-1);
      expect(findFirstOf('dthpe', 'bspkd', 6, 2)).toEqual(-1);
      expect(findFirstOf('klhde', 'ohcmb', 6, 4)).toEqual(-1);
      expect(findFirstOf('bhlki', 'heatr', 6, 5)).toEqual(-1);
      expect(findFirstOf('lqmoh', 'pmblckedfn', 6, 0)).toEqual(-1);
      expect(findFirstOf('mtqin', 'aceqmsrbik', 6, 1)).toEqual(-1);
      expect(findFirstOf('dpqbr', 'lmbtdehjrn', 6, 5)).toEqual(-1);
      expect(findFirstOf('kdhmo', 'teqmcrlgib', 6, 9)).toEqual(-1);
      expect(findFirstOf('jblqp', 'njolbmspac', 6, 10)).toEqual(-1);
      expect(findFirstOf('qmjgl', 'pofnhidklamecrbqjgst', 6, 0)).toEqual(-1);
      expect(findFirstOf('rothp', 'jbhckmtgrqnosafedpli', 6, 1)).toEqual(-1);
      expect(findFirstOf('ghknq', 'dobntpmqklicsahgjerf', 6, 10)).toEqual(-1);
      expect(findFirstOf('eopfi', 'tpdshainjkbfoemlrgcq', 6, 19)).toEqual(-1);
      expect(findFirstOf('dsnmg', 'oldpfgeakrnitscbjmqh', 6, 20)).toEqual(-1);
      expect(findFirstOf('jnkrfhotgl', '', 0, 0)).toEqual(-1);
      expect(findFirstOf('dltjfngbko', 'rqegt', 0, 0)).toEqual(-1);
      expect(findFirstOf('bmjlpkiqde', 'dashm', 0, 1)).toEqual(8);
      expect(findFirstOf('skrflobnqm', 'jqirk', 0, 2)).toEqual(8);
      expect(findFirstOf('jkpldtshrm', 'rckeg', 0, 4)).toEqual(1);
      expect(findFirstOf('ghasdbnjqo', 'jscie', 0, 5)).toEqual(3);
      expect(findFirstOf('igrkhpbqjt', 'efsphndliq', 0, 0)).toEqual(-1);
      expect(findFirstOf('ikthdgcamf', 'gdicosleja', 0, 1)).toEqual(5);
      expect(findFirstOf('pcofgeniam', 'qcpjibosfl', 0, 5)).toEqual(0);
      expect(findFirstOf('rlfjgesqhc', 'lrhmefnjcq', 0, 9)).toEqual(0);
      expect(findFirstOf('itphbqsker', 'dtablcrseo', 0, 10)).toEqual(1);
      expect(findFirstOf('skjafcirqm', 'apckjsftedbhgomrnilq', 0, 0)).toEqual(-1);
      expect(findFirstOf('tcqomarsfd', 'pcbrgflehjtiadnsokqm', 0, 1)).toEqual(-1);
      expect(findFirstOf('rocfeldqpk', 'nsiadegjklhobrmtqcpf', 0, 10)).toEqual(4);
      expect(findFirstOf('cfpegndlkt', 'cpmajdqnolikhgsbretf', 0, 19)).toEqual(0);
      expect(findFirstOf('fqbtnkeasj', 'jcflkntmgiqrphdosaeb', 0, 20)).toEqual(0);
      expect(findFirstOf('shbcqnmoar', '', 1, 0)).toEqual(-1);
      expect(findFirstOf('bdoshlmfin', 'ontrs', 1, 0)).toEqual(-1);
      expect(findFirstOf('khfrebnsgq', 'pfkna', 1, 1)).toEqual(-1);
      expect(findFirstOf('getcrsaoji', 'ekosa', 1, 2)).toEqual(1);
      expect(findFirstOf('fjiknedcpq', 'anqhk', 1, 4)).toEqual(4);
      expect(findFirstOf('tkejgnafrm', 'jekca', 1, 5)).toEqual(1);
      expect(findFirstOf('jnakolqrde', 'ikemsjgacf', 1, 0)).toEqual(-1);
      expect(findFirstOf('lcjptsmgbe', 'arolgsjkhm', 1, 1)).toEqual(-1);
      expect(findFirstOf('itfsmcjorl', 'oftkbldhre', 1, 5)).toEqual(1);
      expect(findFirstOf('omchkfrjea', 'gbkqdoeftl', 1, 9)).toEqual(4);
      expect(findFirstOf('cigfqkated', 'sqcflrgtim', 1, 10)).toEqual(1);
      expect(findFirstOf('tscenjikml', 'fmhbkislrjdpanogqcet', 1, 0)).toEqual(-1);
      expect(findFirstOf('qcpaemsinf', 'rnioadktqlgpbcjsmhef', 1, 1)).toEqual(-1);
      expect(findFirstOf('gltkojeipd', 'oakgtnldpsefihqmjcbr', 1, 10)).toEqual(1);
      expect(findFirstOf('qistfrgnmp', 'gbnaelosidmcjqktfhpr', 1, 19)).toEqual(1);
      expect(findFirstOf('bdnpfcqaem', 'akbripjhlosndcmqgfet', 1, 20)).toEqual(1);
      expect(findFirstOf('ectnhskflp', '', 5, 0)).toEqual(-1);
      expect(findFirstOf('fgtianblpq', 'pijag', 5, 0)).toEqual(-1);
      expect(findFirstOf('mfeqklirnh', 'jrckd', 5, 1)).toEqual(-1);
      expect(findFirstOf('astedncjhk', 'qcloh', 5, 2)).toEqual(6);
      expect(findFirstOf('fhlqgcajbr', 'thlmp', 5, 4)).toEqual(-1);
      expect(findFirstOf('epfhocmdng', 'qidmo', 5, 5)).toEqual(6);
      expect(findFirstOf('apcnsibger', 'lnegpsjqrd', 5, 0)).toEqual(-1);
      expect(findFirstOf('aqkocrbign', 'rjqdablmfs', 5, 1)).toEqual(5);
      expect(findFirstOf('ijsmdtqgce', 'enkgpbsjaq', 5, 5)).toEqual(7);
      expect(findFirstOf('clobgsrken', 'kdsgoaijfh', 5, 9)).toEqual(5);
      expect(findFirstOf('jbhcfposld', 'trfqgmckbe', 5, 10)).toEqual(-1);
      expect(findFirstOf('oqnpblhide', 'igetsracjfkdnpoblhqm', 5, 0)).toEqual(-1);
      expect(findFirstOf('lroeasctif', 'nqctfaogirshlekbdjpm', 5, 1)).toEqual(-1);
      expect(findFirstOf('bpjlgmiedh', 'csehfgomljdqinbartkp', 5, 10)).toEqual(5);
      expect(findFirstOf('pamkeoidrj', 'qahoegcmplkfsjbdnitr', 5, 19)).toEqual(5);
      expect(findFirstOf('espogqbthk', 'dpteiajrqmsognhlfbkc', 5, 20)).toEqual(5);
      expect(findFirstOf('shoiedtcjb', '', 9, 0)).toEqual(-1);
      expect(findFirstOf('ebcinjgads', 'tqbnh', 9, 0)).toEqual(-1);
      expect(findFirstOf('dqmregkcfl', 'akmle', 9, 1)).toEqual(-1);
      expect(findFirstOf('ngcrieqajf', 'iqfkm', 9, 2)).toEqual(-1);
      expect(findFirstOf('qosmilgnjb', 'tqjsr', 9, 4)).toEqual(-1);
      expect(findFirstOf('ikabsjtdfl', 'jplqg', 9, 5)).toEqual(9);
      expect(findFirstOf('ersmicafdh', 'oilnrbcgtj', 9, 0)).toEqual(-1);
      expect(findFirstOf('fdnplotmgh', 'morkglpesn', 9, 1)).toEqual(-1);
      expect(findFirstOf('fdbicojerm', 'dmicerngat', 9, 5)).toEqual(9);
      expect(findFirstOf('mbtafndjcq', 'radgeskbtc', 9, 9)).toEqual(-1);
      expect(findFirstOf('mlenkpfdtc', 'ljikprsmqo', 9, 10)).toEqual(-1);
      expect(findFirstOf('ahlcifdqgs', 'trqihkcgsjamfdbolnpe', 9, 0)).toEqual(-1);
      expect(findFirstOf('bgjemaltks', 'lqmthbsrekajgnofcipd', 9, 1)).toEqual(-1);
      expect(findFirstOf('pdhslbqrfc', 'jtalmedribkgqsopcnfh', 9, 10)).toEqual(-1);
      expect(findFirstOf('dirhtsnjkc', 'spqfoiclmtagejbndkrh', 9, 19)).toEqual(9);
      expect(findFirstOf('dlroktbcja', 'nmotklspigjrdhcfaebq', 9, 20)).toEqual(9);
      expect(findFirstOf('ncjpmaekbs', '', 10, 0)).toEqual(-1);
      expect(findFirstOf('hlbosgmrak', 'hpmsd', 10, 0)).toEqual(-1);
      expect(findFirstOf('pqfhsgilen', 'qnpor', 10, 1)).toEqual(-1);
      expect(findFirstOf('gqtjsbdckh', 'otdma', 10, 2)).toEqual(-1);
      expect(findFirstOf('cfkqpjlegi', 'efhjg', 10, 4)).toEqual(-1);
      expect(findFirstOf('beanrfodgj', 'odpte', 10, 5)).toEqual(-1);
      expect(findFirstOf('adtkqpbjfi', 'bctdgfmolr', 10, 0)).toEqual(-1);
      expect(findFirstOf('iomkfthagj', 'oaklidrbqg', 10, 1)).toEqual(-1);

      expect(findFirstOf('sdpcilonqj', 'dnjfsagktr', 10, 5)).toEqual(-1);
      expect(findFirstOf('gtfbdkqeml', 'nejaktmiqg', 10, 9)).toEqual(-1);
      expect(findFirstOf('bmeqgcdorj', 'pjqonlebsf', 10, 10)).toEqual(-1);
      expect(findFirstOf('etqlcanmob', 'dshmnbtolcjepgaikfqr', 10, 0)).toEqual(-1);
      expect(findFirstOf('roqmkbdtia', 'iogfhpabtjkqlrnemcds', 10, 1)).toEqual(-1);
      expect(findFirstOf('kadsithljf', 'ngridfabjsecpqltkmoh', 10, 10)).toEqual(-1);
      expect(findFirstOf('sgtkpbfdmh', 'athmknplcgofrqejsdib', 10, 19)).toEqual(-1);
      expect(findFirstOf('qgmetnabkl', 'ldobhmqcafnjtkeisgrp', 10, 20)).toEqual(-1);
      expect(findFirstOf('cqjohampgd', '', 11, 0)).toEqual(-1);
      expect(findFirstOf('hobitmpsan', 'aocjb', 11, 0)).toEqual(-1);
      expect(findFirstOf('tjehkpsalm', 'jbrnk', 11, 1)).toEqual(-1);
      expect(findFirstOf('ngfbojitcl', 'tqedg', 11, 2)).toEqual(-1);
      expect(findFirstOf('rcfkdbhgjo', 'nqskp', 11, 4)).toEqual(-1);
      expect(findFirstOf('qghptonrea', 'eaqkl', 11, 5)).toEqual(-1);
      expect(findFirstOf('hnprfgqjdl', 'reaoicljqm', 11, 0)).toEqual(-1);
      expect(findFirstOf('hlmgabenti', 'lsftgajqpm', 11, 1)).toEqual(-1);
      expect(findFirstOf('ofcjanmrbs', 'rlpfogmits', 11, 5)).toEqual(-1);
      expect(findFirstOf('jqedtkornm', 'shkncmiaqj', 11, 9)).toEqual(-1);
      expect(findFirstOf('rfedlasjmg', 'fpnatrhqgs', 11, 10)).toEqual(-1);
      expect(findFirstOf('talpqjsgkm', 'sjclemqhnpdbgikarfot', 11, 0)).toEqual(-1);
      expect(findFirstOf('lrkcbtqpie', 'otcmedjikgsfnqbrhpla', 11, 1)).toEqual(-1);
      expect(findFirstOf('cipogdskjf', 'bonsaefdqiprkhlgtjcm', 11, 10)).toEqual(-1);
      expect(findFirstOf('nqedcojahi', 'egpscmahijlfnkrodqtb', 11, 19)).toEqual(-1);
      expect(findFirstOf('hefnrkmctj', 'kmqbfepjthgilscrndoa', 11, 20)).toEqual(-1);
      expect(findFirstOf('atqirnmekfjolhpdsgcb', '', 0, 0)).toEqual(-1);
      expect(findFirstOf('echfkmlpribjnqsaogtd', 'prboq', 0, 0)).toEqual(-1);
      expect(findFirstOf('qnhiftdgcleajbpkrosm', 'fjcqh', 0, 1)).toEqual(4);
      expect(findFirstOf('chamfknorbedjitgslpq', 'fmosa', 0, 2)).toEqual(3);
      expect(findFirstOf('njhqpibfmtlkaecdrgso', 'qdbok', 0, 4)).toEqual(3);
      expect(findFirstOf('ebnghfsqkprmdcljoiat', 'amslg', 0, 5)).toEqual(3);
      expect(findFirstOf('letjomsgihfrpqbkancd', 'smpltjneqb', 0, 0)).toEqual(-1);
      expect(findFirstOf('nblgoipcrqeaktshjdmf', 'flitskrnge', 0, 1)).toEqual(19);
      expect(findFirstOf('cehkbngtjoiflqapsmrd', 'pgqihmlbef', 0, 5)).toEqual(2);
      expect(findFirstOf('mignapfoklbhcqjetdrs', 'cfpdqjtgsb', 0, 9)).toEqual(2);
      expect(findFirstOf('ceatbhlsqjgpnokfrmdi', 'htpsiaflom', 0, 10)).toEqual(2);
      expect(findFirstOf('ocihkjgrdelpfnmastqb', 'kpjfiaceghsrdtlbnomq', 0, 0)).toEqual(-1);
      expect(findFirstOf('noelgschdtbrjfmiqkap', 'qhtbomidljgafneksprc', 0, 1)).toEqual(16);
      expect(findFirstOf('dkclqfombepritjnghas', 'nhtjobkcefldimpsaqgr', 0, 10)).toEqual(1);
      expect(findFirstOf('miklnresdgbhqcojftap', 'prabcjfqnoeskilmtgdh', 0, 19)).toEqual(0);
      expect(findFirstOf('htbcigojaqmdkfrnlsep', 'dtrgmchilkasqoebfpjn', 0, 20)).toEqual(0);
      expect(findFirstOf('febhmqtjanokscdirpgl', '', 1, 0)).toEqual(-1);
      expect(findFirstOf('loakbsqjpcrdhftniegm', 'sqome', 1, 0)).toEqual(-1);
      expect(findFirstOf('reagphsqflbitdcjmkno', 'smfte', 1, 1)).toEqual(6);
      expect(findFirstOf('jitlfrqemsdhkopncabg', 'ciboh', 1, 2)).toEqual(1);
      expect(findFirstOf('mhtaepscdnrjqgbkifol', 'haois', 1, 4)).toEqual(1);
      expect(findFirstOf('tocesrfmnglpbjihqadk', 'abfki', 1, 5)).toEqual(6);
      expect(findFirstOf('lpfmctjrhdagneskbqoi', 'frdkocntmq', 1, 0)).toEqual(-1);
      expect(findFirstOf('lsmqaepkdhncirbtjfgo', 'oasbpedlnr', 1, 1)).toEqual(19);
      expect(findFirstOf('epoiqmtldrabnkjhcfsg', 'kltqmhgand', 1, 5)).toEqual(4);
      expect(findFirstOf('emgasrilpknqojhtbdcf', 'gdtfjchpmr', 1, 9)).toEqual(1);
      expect(findFirstOf('hnfiagdpcklrjetqbsom', 'ponmcqblet', 1, 10)).toEqual(1);
      expect(findFirstOf('nsdfebgajhmtricpoklq', 'sgphqdnofeiklatbcmjr', 1, 0)).toEqual(-1);
      expect(findFirstOf('atjgfsdlpobmeiqhncrk', 'ljqprsmigtfoneadckbh', 1, 1)).toEqual(7);
      expect(findFirstOf('sitodfgnrejlahcbmqkp', 'ligeojhafnkmrcsqtbdp', 1, 10)).toEqual(1);
      expect(findFirstOf('fraghmbiceknltjpqosd', 'lsimqfnjarbopedkhcgt', 1, 19)).toEqual(1);
      expect(findFirstOf('pmafenlhqtdbkirjsogc', 'abedmfjlghniorcqptks', 1, 20)).toEqual(1);
      expect(findFirstOf('pihgmoeqtnakrjslcbfd', '', 10, 0)).toEqual(-1);
      expect(findFirstOf('gjdkeprctqblnhiafsom', 'hqtoa', 10, 0)).toEqual(-1);
      expect(findFirstOf('mkpnblfdsahrcqijteog', 'cahif', 10, 1)).toEqual(12);
      expect(findFirstOf('gckarqnelodfjhmbptis', 'kehis', 10, 2)).toEqual(-1);
      expect(findFirstOf('gqpskidtbclomahnrjfe', 'kdlmh', 10, 4)).toEqual(10);
      expect(findFirstOf('pkldjsqrfgitbhmaecno', 'paeql', 10, 5)).toEqual(15);
      expect(findFirstOf('aftsijrbeklnmcdqhgop', 'aghoqiefnb', 10, 0)).toEqual(-1);
      expect(findFirstOf('mtlgdrhafjkbiepqnsoc', 'jrbqaikpdo', 10, 1)).toEqual(-1);
      expect(findFirstOf('pqgirnaefthokdmbsclj', 'smjonaeqcl', 10, 5)).toEqual(11);
      expect(findFirstOf('kpdbgjmtherlsfcqoina', 'eqbdrkcfah', 10, 9)).toEqual(10);
      expect(findFirstOf('jrlbothiknqmdgcfasep', 'kapmsienhf', 10, 10)).toEqual(11);
      expect(findFirstOf('mjogldqferckabinptsh', 'jpqotrlenfcsbhkaimdg', 10, 0)).toEqual(-1);
      expect(findFirstOf('apoklnefbhmgqcdrisjt', 'jlbmhnfgtcqprikeados', 10, 1)).toEqual(18);
      expect(findFirstOf('ifeopcnrjbhkdgatmqls', 'stgbhfmdaljnpqoicker', 10, 10)).toEqual(10);
      expect(findFirstOf('ckqhaiesmjdnrgolbtpf', 'oihcetflbjagdsrkmqpn', 10, 19)).toEqual(10);
      expect(findFirstOf('bnlgapfimcoterskqdjh', 'adtclebmnpjsrqfkigoh', 10, 20)).toEqual(10);
      expect(findFirstOf('kgdlrobpmjcthqsafeni', '', 19, 0)).toEqual(-1);
      expect(findFirstOf('dfkechomjapgnslbtqir', 'beafg', 19, 0)).toEqual(-1);
      expect(findFirstOf('rloadknfbqtgmhcsipje', 'iclat', 19, 1)).toEqual(-1);
      expect(findFirstOf('mgjhkolrnadqbpetcifs', 'rkhnf', 19, 2)).toEqual(-1);
      expect(findFirstOf('cmlfakiojdrgtbsphqen', 'clshq', 19, 4)).toEqual(-1);
      expect(findFirstOf('kghbfipeomsntdalrqjc', 'dtcoj', 19, 5)).toEqual(19);
      expect(findFirstOf('eldiqckrnmtasbghjfpo', 'rqosnjmfth', 19, 0)).toEqual(-1);
      expect(findFirstOf('abqjcfedgotihlnspkrm', 'siatdfqglh', 19, 1)).toEqual(-1);
      expect(findFirstOf('qfbadrtjsimkolcenhpg', 'mrlshtpgjq', 19, 5)).toEqual(-1);
      expect(findFirstOf('abseghclkjqifmtodrnp', 'adlcskgqjt', 19, 9)).toEqual(-1);
      expect(findFirstOf('ibmsnlrjefhtdokacqpg', 'drshcjknaf', 19, 10)).toEqual(-1);
      expect(findFirstOf('mrkfciqjebaponsthldg', 'etsaqroinghpkjdlfcbm', 19, 0)).toEqual(-1);
      expect(findFirstOf('mjkticdeoqshpalrfbgn', 'sgepdnkqliambtrocfhj', 19, 1)).toEqual(-1);
      expect(findFirstOf('rqnoclbdejgiphtfsakm', 'nlmcjaqgbsortfdihkpe', 19, 10)).toEqual(19);
      expect(findFirstOf('plkqbhmtfaeodjcrsing', 'racfnpmosldibqkghjet', 19, 19)).toEqual(19);
      expect(findFirstOf('oegalhmstjrfickpbndq', 'fjhdsctkqeiolagrnmbp', 19, 20)).toEqual(19);
      expect(findFirstOf('rdtgjcaohpblniekmsfq', '', 20, 0)).toEqual(-1);
      expect(findFirstOf('ofkqbnjetrmsaidphglc', 'ejanp', 20, 0)).toEqual(-1);
      expect(findFirstOf('grkpahljcftesdmonqib', 'odife', 20, 1)).toEqual(-1);
      expect(findFirstOf('jimlgbhfqkteospardcn', 'okaqd', 20, 2)).toEqual(-1);
      expect(findFirstOf('gftenihpmslrjkqadcob', 'lcdbi', 20, 4)).toEqual(-1);
      expect(findFirstOf('bmhldogtckrfsanijepq', 'fsqbj', 20, 5)).toEqual(-1);
      expect(findFirstOf('nfqkrpjdesabgtlcmoih', 'bigdomnplq', 20, 0)).toEqual(-1);
      expect(findFirstOf('focalnrpiqmdkstehbjg', 'apiblotgcd', 20, 1)).toEqual(-1);
      expect(findFirstOf('rhqdspkmebiflcotnjga', 'acfhdenops', 20, 5)).toEqual(-1);
      expect(findFirstOf('rahdtmsckfboqlpniegj', 'jopdeamcrk', 20, 9)).toEqual(-1);
      expect(findFirstOf('fbkeiopclstmdqranjhg', 'trqncbkgmh', 20, 10)).toEqual(-1);
      expect(findFirstOf('lifhpdgmbconstjeqark', 'tomglrkencbsfjqpihda', 20, 0)).toEqual(-1);

      expect(findFirstOf('pboqganrhedjmltsicfk', 'gbkhdnpoietfcmrslajq', 20, 1)).toEqual(-1);
      expect(findFirstOf('klchabsimetjnqgorfpd', 'rtfnmbsglkjaichoqedp', 20, 10)).toEqual(-1);
      expect(findFirstOf('sirfgmjqhctndbklaepo', 'ohkmdpfqbsacrtjnlgei', 20, 19)).toEqual(-1);
      expect(findFirstOf('rlbdsiceaonqjtfpghkm', 'dlbrteoisgphmkncajfq', 20, 20)).toEqual(-1);
      expect(findFirstOf('ecgdanriptblhjfqskom', '', 21, 0)).toEqual(-1);
      expect(findFirstOf('fdmiarlpgcskbhoteqjn', 'sjrlo', 21, 0)).toEqual(-1);
      expect(findFirstOf('rlbstjqopignecmfadkh', 'qjpor', 21, 1)).toEqual(-1);
      expect(findFirstOf('grjpqmbshektdolcafni', 'odhfn', 21, 2)).toEqual(-1);
      expect(findFirstOf('sakfcohtqnibprjmlged', 'qtfin', 21, 4)).toEqual(-1);
      expect(findFirstOf('mjtdglasihqpocebrfkn', 'hpqfo', 21, 5)).toEqual(-1);
      expect(findFirstOf('okaplfrntghqbmeicsdj', 'fabmertkos', 21, 0)).toEqual(-1);
      expect(findFirstOf('sahngemrtcjidqbklfpo', 'brqtgkmaej', 21, 1)).toEqual(-1);
      expect(findFirstOf('dlmsipcnekhbgoaftqjr', 'nfrdeihsgl', 21, 5)).toEqual(-1);
      expect(findFirstOf('ahegrmqnoiklpfsdbcjt', 'hlfrosekpi', 21, 9)).toEqual(-1);
      expect(findFirstOf('hdsjbnmlegtkqripacof', 'atgbkrjdsm', 21, 10)).toEqual(-1);
      expect(findFirstOf('pcnedrfjihqbalkgtoms', 'blnrptjgqmaifsdkhoec', 21, 0)).toEqual(-1);
      expect(findFirstOf('qjidealmtpskrbfhocng', 'ctpmdahebfqjgknloris', 21, 1)).toEqual(-1);
      expect(findFirstOf('qeindtagmokpfhsclrbj', 'apnkeqthrmlbfodiscgj', 21, 10)).toEqual(-1);
      expect(findFirstOf('kpfegbjhsrnodltqciam', 'jdgictpframeoqlsbknh', 21, 19)).toEqual(-1);
      expect(findFirstOf('hnbrcplsjfgiktoedmaq', 'qprlsfojamgndekthibc', 21, 20)).toEqual(-1);
    });
  });
});
